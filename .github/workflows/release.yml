name: release
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    if: github.repository_owner == 'flybywiresim'
    runs-on: windows-latest
    env:
      RELEASE_ZIP_NAME: fbw-simbridge.zip
      BUILD_DIR_NAME: release
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: set Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Build Local API
        run: |
          npm install
          npm run build:exec
      - name: Build ZIP File
        run: |
          node .\scripts\fragment.js
          Compress-Archive -Path .\build\* .\${{env.BUILD_DIR_NAME }}\${{ env.RELEASE_ZIP_NAME }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\${{env.BUILD_DIR_NAME }}\${{ env.RELEASE_ZIP_NAME }}
          asset_name: ${{ env.RELEASE_ZIP_NAME }}
          asset_content_type: application/zip
      - name: Upload to Bunny CDN
        env:
          BUNNY_BUCKET_PASSWORD: ${{ secrets.BUNNY_BUCKET_PASSWORD }}
          BUNNY_SECRET_TOKEN: ${{ secrets.BUNNY_SECRET_TOKEN }}
          BUNNY_BUCKET_DESTINATION: addons/simbridge/release
        run: |
          node scripts\cdn.js $BUNNY_BUCKET_DESTINATION .\build-modules
          node scripts\cdn.js $BUNNY_BUCKET_DESTINATION .\${{ env.BUILD_DIR_NAME }}
      - name: Delete old GitHub Pre-Release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.STABLE_PRE_RELEASE_TAG }}
          assets: "*"
          fail-if-no-assets: false
      - name: Upload aicraft package to GitHub Pre-Release Assets
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.STABLE_PRE_RELEASE_ID }}/assets{?name,label}
          asset_path: .\${{ env.BUILD_DIR_NAME }}\${{ env.STABLE_ZIP_NAME }}
          asset_name: ${{ env.STABLE_ZIP_NAME }}
          asset_content_type: application/zip
      - name: Upload fragments to GitHub Pre-Release Assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ env.STABLE_PRE_RELEASE_ID }}
          assets_path: .\build-modules\
      - name: Update GitHub Pre-Release Body
        run: |
          curl --request PATCH \
            --url 'https://api.github.com/repos/${{ github.repository }}/releases/${{ env.STABLE_PRE_RELEASE_ID }}' \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "body": "This pre-release has its asset updated on every release\nLast updated on ${{ env.BUILT_DATE_TIME }} from commit ${{ github.sha }}\nThis link will always point to the latest stable build: https://github.com/${{ github.repository }}/releases/download/${{ env.STABLE_PRE_RELEASE_TAG }}/${{ env.STABLE_ZIP_NAME }}"
            }'
